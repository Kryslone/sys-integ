{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\sys_integ\\\\frontend\\\\src\\\\pages\\\\create_notes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { createNote } from '../services/notesService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateNotePage = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [isMinute, setIsMinute] = useState(false); // State for minute note\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log('Submit triggered with:', {\n      title,\n      content,\n      isMinute\n    });\n\n    // Validate if title and content are filled\n    if (!title || !content) {\n      console.error('Title and content cannot be empty.');\n      return;\n    }\n    try {\n      // Create note with the minute note option\n      const response = await createNote({\n        title,\n        content,\n        isMinute\n      });\n      console.log('Response from API:', response.data);\n\n      // Redirect after saving the note\n      navigate('/minute_notes'); // You can redirect to the minute notes page or any other page you prefer\n    } catch (err) {\n      console.error('Error creating note:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Content:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: content,\n          onChange: e => setContent(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isMinute,\n            onChange: () => setIsMinute(!isMinute) // Toggle the minute note state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), \"Save as Minute Note\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateNotePage, \"fDXxXGmvnQdwCEWJjZatx9kgSI0=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateNotePage;\nexport default CreateNotePage;\nvar _c;\n$RefreshReg$(_c, \"CreateNotePage\");","map":{"version":3,"names":["React","useState","useNavigate","createNote","jsxDEV","_jsxDEV","CreateNotePage","_s","title","setTitle","content","setContent","isMinute","setIsMinute","navigate","handleSubmit","e","preventDefault","console","log","error","response","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","checked","_c","$RefreshReg$"],"sources":["C:/Users/HP/sys_integ/frontend/src/pages/create_notes.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { createNote } from '../services/notesService';\r\n\r\nconst CreateNotePage = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [isMinute, setIsMinute] = useState(false); // State for minute note\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log('Submit triggered with:', { title, content, isMinute });\r\n\r\n    // Validate if title and content are filled\r\n    if (!title || !content) {\r\n      console.error('Title and content cannot be empty.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Create note with the minute note option\r\n      const response = await createNote({ title, content, isMinute });\r\n      console.log('Response from API:', response.data);\r\n\r\n      // Redirect after saving the note\r\n      navigate('/minute_notes');  // You can redirect to the minute notes page or any other page you prefer\r\n    } catch (err) {\r\n      console.error('Error creating note:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Create Note</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Title:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Content:</label>\r\n          <textarea\r\n            value={content}\r\n            onChange={(e) => setContent(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={isMinute}\r\n              onChange={() => setIsMinute(!isMinute)} // Toggle the minute note state\r\n            />\r\n            Save as Minute Note\r\n          </label>\r\n        </div>\r\n        <button type=\"submit\">Save Note</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateNotePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}