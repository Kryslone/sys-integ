{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\sys_integ\\\\frontend\\\\src\\\\pages\\\\minute_note_edit.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { getNotes, updateNote } from '../services/notesService'; // UpdateService function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MinuteNoteEdit = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get note ID from URL params\n  const [note, setNote] = useState(null); // State for note data\n  const [content, setContent] = useState(''); // State for note content\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchNote = async () => {\n      try {\n        const response = await getNotes();\n        const foundNote = response.data.find(note => note._id === id);\n        setNote(foundNote);\n        setContent(foundNote.content); // Set the content to be editable\n      } catch (err) {\n        console.error('Error fetching note:', err);\n      }\n    };\n    fetchNote();\n  }, [id]);\n  const handleSave = async () => {\n    try {\n      const updatedNote = {\n        ...note,\n        content\n      }; // Create updated note\n      await updateNote(id, updatedNote); // Call the update function\n      navigate(`/minute_note/${id}`); // Navigate back to the note detail page after saving\n    } catch (err) {\n      console.error('Error updating note:', err);\n    }\n  };\n  if (!note) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Edit Note: \", note.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: content // Bind the textarea to the content state\n      ,\n      onChange: e => setContent(e.target.value) // Update content state on input change\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Save Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), \"  \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(MinuteNoteEdit, \"ShTq8m55UT0NUuKfgGFMunKy3FM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = MinuteNoteEdit;\nexport default MinuteNoteEdit;\nvar _c;\n$RefreshReg$(_c, \"MinuteNoteEdit\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","getNotes","updateNote","jsxDEV","_jsxDEV","MinuteNoteEdit","_s","id","note","setNote","content","setContent","navigate","fetchNote","response","foundNote","data","find","_id","err","console","error","handleSave","updatedNote","children","fileName","_jsxFileName","lineNumber","columnNumber","title","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/sys_integ/frontend/src/pages/minute_note_edit.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { getNotes, updateNote } from '../services/notesService';  // UpdateService function\r\n\r\nconst MinuteNoteEdit = () => {\r\n  const { id } = useParams();  // Get note ID from URL params\r\n  const [note, setNote] = useState(null);  // State for note data\r\n  const [content, setContent] = useState('');  // State for note content\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchNote = async () => {\r\n      try {\r\n        const response = await getNotes();\r\n        const foundNote = response.data.find(note => note._id === id);\r\n        setNote(foundNote);\r\n        setContent(foundNote.content);  // Set the content to be editable\r\n      } catch (err) {\r\n        console.error('Error fetching note:', err);\r\n      }\r\n    };\r\n    \r\n    fetchNote();\r\n  }, [id]);\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const updatedNote = { ...note, content };  // Create updated note\r\n      await updateNote(id, updatedNote);  // Call the update function\r\n      navigate(`/minute_note/${id}`);  // Navigate back to the note detail page after saving\r\n    } catch (err) {\r\n      console.error('Error updating note:', err);\r\n    }\r\n  };\r\n\r\n  if (!note) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Edit Note: {note.title}</h1>\r\n      <textarea\r\n        value={content}  // Bind the textarea to the content state\r\n        onChange={(e) => setContent(e.target.value)}  // Update content state on input change\r\n      />\r\n      <button onClick={handleSave}>Save Changes</button>  {/* Save changes button */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MinuteNoteEdit;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}